<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.wiper.mapper.interfaces.EmployeeMapper">

    <resultMap id="employee" type="app.wiper.domain.core.Employee">
        <result property="employeeId" column="emp_id" jdbcType="INTEGER" />
        <result property="name" column="name" jdbcType="VARCHAR" />
        <result property="aadharNumber" column="aadhar_number" jdbcType="VARCHAR" />
        <result property="isActive" column="is_active" jdbcType="BIT" />
    		<association property="credentials" column="{entity_type_id=entity_type_id,entity_id=emp_id}"
            javaType="app.wiper.domain.core.Credentials" select="app.wiper.mapper.interfaces.CredentialsMapper.getCredentialsForEntityIdAndEntityTypeId" />
        <association property="entityType" column="entity_type_id"
            javaType="app.wiper.domain.type.EntityType" select="app.wiper.mapper.interfaces.EntityTypeMapper.getEntityTypeById" />
        <association property="correspondenceAddress" column="emp_id"
            javaType="app.wiper.domain.core.CorrespondenceAddress" select="app.wiper.mapper.interfaces.AddressMapper.getCorrespondenceAddressByEmployeeId" />
        <collection property="locations" column="emp_id"
            ofType="app.wiper.domain.core.EmployeeLocation" select="getLocationsForEmployee" />
    </resultMap>
        
   <select id="getLocationsForEmployee" resultMap="app.wiper.mapper.interfaces.AddressMapper.location">
   		select * from employee_location where emp_id = #{emp_id} and is_active = 1;
   </select>
           
   <select id="getEmployeeById" resultMap="employee">
   		select * from employee where emp_id = #{emp_id} 
   </select>
   
   <insert id="insertBasicDataForEmployee" parameterType="java.util.HashMap" useGeneratedKeys="true"  keyProperty="employeeId" >
        INSERT INTO wiper.employee(
        emp_id ,
        name,
        aadhar_number ,
        is_active,
        entity_type_id     
        )
        VALUES
        (
        #{employee.employeeId},
        #{employee.name},
        #{employee.aadharNumber},
        #{employee.isActive},
        #{employee.entityType.entityTypeId}
        )
 		ON DUPLICATE KEY 
        UPDATE  name = IF(#{employee.name} IS NOT NULL, #{employee.name}, name), 
        aadhar_number = IF(#{employee.aadharNumber} IS NOT NULL, #{employee.aadharNumber}, aadhar_number),
		is_active = IF(#{employee.isActive} IS NOT NULL, #{employee.isActive}, is_active),
		entity_type_id = IF(#{employee.entityType} IS NOT NULL, #{employee.entityType.entityTypeId}, entity_type_id);	
      <selectKey keyProperty="employeeId" resultType="Integer" order="AFTER">
            <choose>
                <when test="employee.employeeId != null">
                    select #{employee.employeeId};
                </when>
                <otherwise>
                    SELECT LAST_INSERT_ID() as employeeId;
                </otherwise>
            </choose>
        </selectKey>
    </insert>  
      
</mapper>